@page "/"
<button type="button" class="btn btn-primary"
        onclick="returnAStringJs()">
    Trigger .NET static method ReturnAStringAsync
</button>

<button type="button" class="btn btn-primary"
        @onclick="DoInstanceMethodCall">
    Trigger .NET instance method call person.GetName
</button>

@*
Defined in _Hist.cshtml
<script type="text/javascript">
    function returnAStringJs() {
        DotNet.invokeMethodAsync('Blazor-CallDotNetMethodsFromJavaScriptFunctions', 'ReturnAStringAsync', 'vengalapurath')
            .then(data => {
                console.log(data);
            });

    }
</script>
*@

@code {
    [Inject]
    public IJSRuntime jsRuntime { get; set; }

    //[JSInvokable("DifferentMethodName")]
    [JSInvokable]
    public static Task<string> ReturnAStringAsync(string s)
    {
        return Task.FromResult<string>("rajeesh " + s);
    }
    public async Task DoInstanceMethodCall()
    {
        DotNetObjectReference<Data.Person> person = DotNetObjectReference.Create(new Data.Person());

        await jsRuntime.InvokeAsync<string>("getNameJs", person);

    }
}